// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queue.proto

package dfx

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Deployable struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	SourceUrl            string   `protobuf:"bytes,4,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	Source               string   `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deployable) Reset()         { *m = Deployable{} }
func (m *Deployable) String() string { return proto.CompactTextString(m) }
func (*Deployable) ProtoMessage()    {}
func (*Deployable) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{0}
}

func (m *Deployable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deployable.Unmarshal(m, b)
}
func (m *Deployable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deployable.Marshal(b, m, deterministic)
}
func (m *Deployable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployable.Merge(m, src)
}
func (m *Deployable) XXX_Size() int {
	return xxx_messageInfo_Deployable.Size(m)
}
func (m *Deployable) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployable.DiscardUnknown(m)
}

var xxx_messageInfo_Deployable proto.InternalMessageInfo

func (m *Deployable) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Deployable) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Deployable) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Deployable) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

func (m *Deployable) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_96e4d7d76a734cd8, []int{1}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Deployable)(nil), "dfx.Deployable")
	proto.RegisterType((*Void)(nil), "dfx.Void")
}

func init() { proto.RegisterFile("queue.proto", fileDescriptor_96e4d7d76a734cd8) }

var fileDescriptor_96e4d7d76a734cd8 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xcd, 0xaa, 0xc2, 0x40,
	0x0c, 0x85, 0x6f, 0x6f, 0x7f, 0x64, 0xe2, 0x42, 0x08, 0x22, 0x83, 0x20, 0x48, 0x57, 0xba, 0xe9,
	0xa2, 0xbe, 0x82, 0xee, 0x55, 0xd0, 0xad, 0xd8, 0x76, 0x0a, 0x85, 0xb1, 0xa9, 0xd3, 0x19, 0xa9,
	0x4f, 0xe0, 0x6b, 0x4b, 0x53, 0xc5, 0x5d, 0xbe, 0xef, 0x10, 0x72, 0x02, 0xe3, 0xbb, 0x53, 0x4e,
	0x25, 0x8d, 0x21, 0x4b, 0xe8, 0x17, 0x65, 0x17, 0xbf, 0x3c, 0x80, 0xad, 0x6a, 0x34, 0x3d, 0xaf,
	0x99, 0x56, 0x38, 0x85, 0xd0, 0x56, 0x56, 0x2b, 0xe9, 0x2d, 0xbd, 0x95, 0x38, 0x0e, 0x80, 0x12,
	0x46, 0x39, 0xd5, 0x56, 0xd5, 0x56, 0xfe, 0xb3, 0xff, 0x22, 0x22, 0x04, 0xa5, 0xa1, 0x9b, 0xf4,
	0x59, 0xf3, 0x8c, 0x0b, 0x80, 0x96, 0x9c, 0xc9, 0xd5, 0xc5, 0x19, 0x2d, 0x03, 0x4e, 0xc4, 0x60,
	0x4e, 0x46, 0xe3, 0x0c, 0xa2, 0x01, 0x64, 0xc8, 0xd1, 0x87, 0xe2, 0x08, 0x82, 0x33, 0x55, 0x45,
	0x9a, 0x42, 0x78, 0xe8, 0x5b, 0xe2, 0x1a, 0xc4, 0x9e, 0x5a, 0xbb, 0x7b, 0xf4, 0x87, 0x26, 0x49,
	0x51, 0x76, 0xc9, 0xaf, 0xe9, 0x5c, 0xb0, 0xe8, 0x37, 0xe2, 0xbf, 0x2c, 0xe2, 0x8f, 0x36, 0xef,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x48, 0x0d, 0x5d, 0xa7, 0xe0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueueClient is the client API for Queue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueueClient interface {
	PostEvent(ctx context.Context, in *Deployable, opts ...grpc.CallOption) (*Void, error)
}

type queueClient struct {
	cc *grpc.ClientConn
}

func NewQueueClient(cc *grpc.ClientConn) QueueClient {
	return &queueClient{cc}
}

func (c *queueClient) PostEvent(ctx context.Context, in *Deployable, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/dfx.Queue/PostEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueueServer is the server API for Queue service.
type QueueServer interface {
	PostEvent(context.Context, *Deployable) (*Void, error)
}

// UnimplementedQueueServer can be embedded to have forward compatible implementations.
type UnimplementedQueueServer struct {
}

func (*UnimplementedQueueServer) PostEvent(ctx context.Context, req *Deployable) (*Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostEvent not implemented")
}

func RegisterQueueServer(s *grpc.Server, srv QueueServer) {
	s.RegisterService(&_Queue_serviceDesc, srv)
}

func _Queue_PostEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Deployable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueServer).PostEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfx.Queue/PostEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueServer).PostEvent(ctx, req.(*Deployable))
	}
	return interceptor(ctx, in, info, handler)
}

var _Queue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dfx.Queue",
	HandlerType: (*QueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostEvent",
			Handler:    _Queue_PostEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "queue.proto",
}
